  {"Description": "CloudFormation template for creating an ec2 instance",
"Parameters": {
    "KeyName": {
        "Description": "Key Pair Name",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "Default": "idirect"
    },
    "VPC": {
        "Type": "AWS::EC2::VPC::Id",
        "Default":"vpc-022eb067"
    },
    "Subnet":{
        "Type": "AWS::EC2::Subnet::Id",
        "Default": "subnet-b12cea9a"
    },
    "InstanceType": {
        "Description": "Select one of the possible instance types",
        "Type": "String",
        "Default": "t2.micro",
        "AllowedValues": ["t2.micro", "t2.small", "t2.medium"]
    },
    "SecurityGroup":{
         "Type": "AWS::EC2::SecurityGroup::Id",
         "Default" : "sg-04b1e9ce3cd06e297",
         "AllowedValues": ["sg-04b1e9ce3cd06e297", "sg-yyy", "sg-zzz"]
		 } 
},
"Resources":{
    "Server": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
            "ImageId": "ami-0a887e401f7654935",
            "InstanceType": {"Ref": "InstanceType"},
            "KeyName": {"Ref": "KeyName"},
            "SecurityGroupIds": [{"Ref": "SecurityGroup"}],
            "SubnetId": {"Ref": "Subnet"},
			"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
              "#!/bin/bash -xe\n",
				"sudo su \n",
                "yum update -y\n",
                "yum install docker -y \n",
				"service docker start \n",
				"docker pull httpd \n",
				"docker volume create vol \n",
				"docker run -d --name hut -p 80:80 -v vol:/usr/local/apache2 httpd\n",
				"cd /var/lib/docker/volumes/vol/_data/htdocs \n",
				"yum install git -y \n",
				"git init\n",
				"git remote add origin https://github.com/sushmitabhandari/iDirect.git \n",
				"git clone https://github.com/sushmitabhandari/iDirect.git \n",
				"mv iDirect/iDirect.html .\n",
				"truncate -s 0 index.html \n",
				"mv iDirect.html index.html \n"
					
				]
				]
				}},
			"Tags" : [
               {
             "Key" : "Name",
             "Value" : "NMS"
            }]
        }
    },
	"Server1": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
            "ImageId": "ami-0a887e401f7654935",
            "InstanceType": {"Ref": "InstanceType"},
            "KeyName": {"Ref": "KeyName"},
            "SecurityGroupIds": [{"Ref": "SecurityGroup"}],
            "SubnetId": {"Ref": "Subnet"},
			"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
              "#!/bin/bash -xe\n",
				"sudo su \n",
                "yum update -y\n",
                "yum install docker -y \n",
				"service docker start \n",
				"docker pull httpd \n",
				"docker volume create vol \n",
				"docker run -d --name hut -p 80:80 -v vol:/usr/local/apache2 httpd\n",
				"cd /var/lib/docker/volumes/vol/_data/htdocs \n",
				"yum install git -y \n",
				"git init\n",
				"git remote add origin https://github.com/sushmitabhandari/iDirect.git \n",
				"git clone https://github.com/sushmitabhandari/iDirect.git \n",
				"mv iDirect/pp.html .\n",
				"truncate -s 0 index.html \n",
				"mv pp.html index.html \n"
					
				]
				]
				}},
				"Tags" : [
               {
             "Key" : "Name",
             "Value" : "PP"
            }]
        }
    },
	"Server2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
            "ImageId": "ami-0a887e401f7654935",
            "InstanceType": {"Ref": "InstanceType"},
            "KeyName": {"Ref": "KeyName"},
            "SecurityGroupIds": [{"Ref": "SecurityGroup"}],
            "SubnetId": {"Ref": "Subnet"},
			"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
              "#!/bin/bash -xe\n",
				"sudo su \n",
                "yum update -y\n",
                "yum install docker -y \n",
				"service docker start \n",
				"docker pull httpd \n",
				"docker volume create vol \n",
				"docker run -d --name hut -p 80:80 -v vol:/usr/local/apache2 httpd\n",
				"cd /var/lib/docker/volumes/vol/_data/htdocs \n",
				"yum install git -y \n",
				"git init\n",
				"git remote add origin https://github.com/sushmitabhandari/iDirect.git \n",
				"git clone https://github.com/sushmitabhandari/iDirect.git \n",
				"mv iDirect/terminal.html .\n",
				"truncate -s 0 index.html \n",
				"mv terminal.html index.html \n"
					
				]
				]
				}},
				"Tags" : [
               {
             "Key" : "Name",
             "Value" : "TERMINAL"
            }]
        }
    },
	"IPAssoc" : {
     "Type" : "AWS::EC2::EIPAssociation",
     "Properties" : {
         "InstanceId" : {"Ref": "Server"},
         "EIP" : "100.26.0.83"
     }
	 },
	 "IPAssoc1" : {
     "Type" : "AWS::EC2::EIPAssociation",
     "Properties" : {
         "InstanceId" : {"Ref": "Server1"},
         "EIP" : "3.212.186.0"
     }
	 },
	 "IPAssoc2" : {
     "Type" : "AWS::EC2::EIPAssociation",
     "Properties" : {
         "InstanceId" : {"Ref": "Server2"},
         "EIP" : "34.195.73.130"
     }
 }
},
"Outputs": {
    "PublicName": {
        "Value": {"Fn::GetAtt": ["Server", "PublicDnsName"]},
        "Description": "Public name (connect via SSH)"
    }   
}
}
